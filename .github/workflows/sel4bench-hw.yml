# Copyright 2022, Proofcraft Pty Ltd
#
# SPDX-License-Identifier: BSD-2-Clause

# Build and run sel4bench on pull requests, on label request

name: seL4Bench-HW

on:
  workflow_call:
    inputs:
      always_build:
        description: 'Always build sel4bench images, even if no label is present'
        required: false
        default: false
        type: boolean

# intended to run on
#  pull_request_target:
#    types: [opened, reopened, synchronize, labeled]

# downgrade permissions to read-only as you would have in a standard PR action
permissions:
  contents: read

jobs:
  code:
    name: Freeze Code
    runs-on: ubuntu-latest

# Since we cancel older runs of this workflow for the current PR, we want to
# restart tests ("contains" clause), even if the event is for adding a different
# label.
    if: ${{ github.event_name == 'pull_request_target' &&
            ((
               contains(github.event.pull_request.labels.*.name, 'hw-bench') ||
               github.event.label.name == 'hw-bench'
             ) || inputs.always_build) }}
    outputs:
      xml: ${{ steps.repo.outputs.xml }}
    steps:
    - id: repo
      uses: seL4/ci-actions/repo-checkout@master
      with:
        manifest_repo: sel4bench-manifest
        manifest: master.xml
        sha: ${{ github.event.pull_request.head.sha }}

  build:
    name: Build
    needs: code
    runs-on: ubuntu-latest
    # To reduce the load on GitHub runner numbers and machine queue we cancel
    # any older runs of this workflow for the current PR.
    concurrency:
      group: ${{ github.workflow }}-sel4bench-build-pr-${{ github.event.number }}-${{ strategy.job-index }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        march: [armv7a, armv8a, nehalem, rv64imac]
    steps:
    - name: Build
      uses: seL4/ci-actions/sel4bench@master
      with:
        xml: ${{ needs.code.outputs.xml }}
        march: ${{ matrix.march }}
    - name: Upload images
      uses: actions/upload-artifact@v4
      with:
        name: images-sel4bench-${{ matrix.march }}
        path: '*-images.tar.gz'

  hw-run:
    name: HW Benchmark
    if: ${{ github.repository_owner == 'seL4' &&
            github.event_name == 'pull_request_target' &&
            (
              contains(github.event.pull_request.labels.*.name, 'hw-bench') ||
              github.event.label.name == 'hw-bench'
            )
        }}
    runs-on: ubuntu-latest
    needs: [build]
    concurrency:
      group: ${{ github.workflow }}-sel4bench-hw-run-pr-${{ github.event.number }}-${{ strategy.job-index }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        platform:
          - sabre
          - imx8mm_evk
          - odroid_c2
          - odroid_xu4
          - am335x_boneblack
          - tx1
          - tx2
          - hifive
        include:
          - platform: pc99
            req: skylake
          - platform: pc99
            req: haswell3
    steps:
      - name: Get machine queue
        uses: actions/checkout@v4
        with:
          repository: seL4/machine_queue
          path: machine_queue
      - name: Get march
        id: plat
        uses: seL4/ci-actions/march-of-platform@master
        with:
          platform: ${{ matrix.platform }}
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: images-sel4bench-${{ steps.plat.outputs.march }}
      - name: Run
        uses: seL4/ci-actions/sel4bench-hw@master
        with:
          platform: ${{ matrix.platform }}
          req: ${{ matrix.req }}
          index: $${{ strategy.job-index }}
        env:
          HW_SSH: ${{ secrets.HW_SSH }}
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          # funky expression below is to work around lack of ternary operator
          name: sel4bench-results-${{ matrix.platform }}${{ matrix.req != '' && format('-{0}', matrix.req) || '' }}
          path: '*.json'
